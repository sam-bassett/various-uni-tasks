package Enigma;

public class TestM3 {

	   /**
	    * @param args
	    */
	   public static void main(String[] args) {
			TestEnigma.test();
			TestRotors.test();

		   {
	         System.out.println ("simple test...");
	         // test from wikipedia enigma page
	         EnigmaMachine m3 = EnigmaBuilder.constructM3 ("123B");
	         String plainText  = "AAAAA";
	         String cipherText = "BDZGO";
	         m3.setIndicators ("AAA");
	         assert (m3.encipher (plainText).equals (cipherText));
	      }

		   {
	         System.out.println ("longer test...");
	         // test from http://enigmaco.de/enigma/enigma.html
	         EnigmaMachine m3 = EnigmaBuilder.constructM3 ("123B");

	         String plainText  = "WHEREEVERYOUGOTHEREYOUAREWHEREEVERYOUGOTHEREYOUAREWHEREEVERYOUGOTHEREYOUAREWHEREEVERYOUGOTHEREYOUAREWHEREEVERYOUGOTHEREYOUAREWHEREEVERYOUGOTHEREYOUARE";
	         String cipherText = "KPCURNSYDGLDHCUGTOOMLAQGCDQKHOUMRBNBFXDEKUIKBCJHKVPEGLYXBTKFFATZEYYLTNFQGLDSQXOYKUHSGPLVNJTWCZXXKEFBBZGHPLHKVGIFBPLRSVSQYOIXTNEGPMNPBGVDXYHMUNUUDYYLZX";

	         m3.setIndicators ("AAA");
	         String m3Text = m3.encipher(plainText);
	         try {
	        	 assert (m3Text.equals (cipherText));
	         } catch (AssertionError e) {
	        	 System.out.println(plainText);
	        	 System.out.println(m3Text);
	        	 System.out.println(cipherText);
	        	 System.exit(0);
	         }
		  }


	      {
	         System.out.println ("\"YUCK FIX\" test...");

	         // test validated at http://enigmaco.de/enigma/enigma.html
	         EnigmaMachine m3 = EnigmaBuilder.constructM3 ("451B");
	         String cipherText = "BTNJJFJGELCFIPFTLANTCABHGKDFCJWYMPKTFRLWOIQHLBXZCYSBFTIJREAJWHHWQUVLIEVYBANINWFKQYMYRELWPHEYWNSOZCRKIFNDGCNGDQLVTQEWHITLYCNLGCLTJGDLPPWXMTZHNYSLNYMGVOWJQMYEOJAIXYINDUWFGEEIQGXRXKYFMQNLCTQVJEFVGPKUNOXMTMKNJQGGIIKAJZIEHUPVVGZVTNCMSQSWMATLOORQDOXASDTCFBSQDQJPXUCUWTVJEYPNDMGUBBLSRXBINNVOUZZGZRFSCATQWKMCVRBYLEHGVPFXIINZRLMNOWFONLDUGPPQNVNQFTYPIEOCMCXFFQWHNKYTWHFBOFZGQQBYSPNWWSHGULJYFZYBHJAPOQREBQIONTDFFGRWLHHAOLMEJBBZSPXTKDNQYDRFKTGIDVZKPLJZUDELBWQGTURXWJJHCJYXVEMXIQZNAPPDLQKEEBDTGYVBNCNUFKWYFFNETMZLJRBASQTTSTQJTTYQFBLXSGOJXRIXAFCYXMCPBMZQNHHRQTOWIYAMVUGVJGMIGVEWJOTAYXGOLQQCRCQOYCMGZMSSLCLEBMSBIAJKYBLCHCDPYGLPLCKGXTXMKIAKXQWFHYLCGBFGYTQWIKSKOHYHPBJRYBJYAIFGAMGYEMLYOQZONCGXDQSZZIHPQFYXYRTOFOCUVAVEOPXLJUZUXTJUWWDMRDZZAHGTTLNAYCSLVLOFRYYZEDBNPRCIHBYTNVBWYQKJQMEMBJSTLXRDQQFXQBTDMQURKFPYSFQRXIWBZUEALOKHWKCFACIIDVMJVZEZECZYPGNTFZBYMFBEWOPLKKLPZQXGCDIMPMBSVDIUDRRJRBMODKYKHVBOYLMYHOVEMBTVIALAAEFFIAXTHVCMLOFWPVVILTXTAMCSLEBMPDMZMPSPNZVVYFMIXQAPKXRTLVFVUBQULGNJYTXXUWZZOORJQXMMRTSUVJJKYUCKFIXOTOPTQZQQXSYMUBSCHGGELPFZNQSZOYZSLQKWP";
	         String plainText
	         m3.setIndicators ("IYP");
	         System.out.println("BTNJJFJGELCFIPFTLANTCABHGKD".length());
	         assert(m3.getCurrentIndicators().equals("IYP"));
	         
	         String m3Text = m3.encipher(cipherText);
	         try {
	         	assert (m3Text.equals (plainText));
	         } catch (AssertionError e) {
	        	 System.out.println(cipherText);
	        	 System.out.println(m3Text);
	        	 System.out.println(plainText);
	        	 System.exit(0);
	         }
	      }
	     System.out.println ("All tests passed.  You are Awesome!");
	  }
	}